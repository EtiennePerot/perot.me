ssl_session_cache                        shared:SSL:20m;
ssl_session_timeout                      20m;

# Log format line - repeated here so that people can use it if they want
# log_format gzip '$host $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" [DNT:$http_DNT]';

server { # Main server block
	listen                           443 default_server ssl spdy;
	listen                           [::]:443 default_server ssl spdy;
	ssl_certificate                  /etc/ssl/private/perot.me.unified.crt;
	ssl_certificate_key              /etc/ssl/private/perot.me.key;
	ssl_protocols                    TLSv1.2 TLSv1.1 TLSv1 SSLv3;
	# Secure against BEAST attack; see https://community.qualys.com/blogs/securitylabs/2011/10/17/mitigating-the-beast-attack-on-tls
	ssl_ciphers                      ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-RC4-SHA:ECDHE-RSA-RC4-SHA:RC4-SHA:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM;
	ssl_prefer_server_ciphers        on;
	keepalive_timeout                300;
	server_name                      perot.me *.perot.me;
	root                             /home/perot/www;
	add_header                       Strict-Transport-Security "max-age=31557600, includeSubDomains";
	add_header                       X-Frame-Options deny; # Nope, no frames here
	# Disabled because Firefox doesn't support 'unsafe-inline' properly.
	#add_header                       Content-Security-Policy   "default-src https://perot.me; script-src https://perot.me 'unsafe-inline'";
	#add_header                       X-Content-Security-Policy "default-src https://perot.me; script-src https://perot.me 'unsafe-inline'";
	#add_header                       X-WebKit-CSP              "default-src https://perot.me; script-src https://perot.me 'unsafe-inline'";
	add_header                       Cache-Control public;
	gzip_static                      on;
	gzip_http_version                1.1;
	gzip_proxied                     expired no-cache no-store private auth;
	gzip_disable                     "MSIE [1-6]\.";
	gzip_vary                        on;
	types {
		text/html                htm html;
		text/css                 css;
		text/xml                 xml;
		application/xhtml+xml    xhtml;
		image/gif                gif;
		image/jpeg               jpeg jpg;
		image/png                png;
		application/x-javascript js;
		application/atom+xml     atom;
		application/rss+xml      rss rss2;
		application/pgp-keys     asc pgp;
		text/plain               txt md;
		image/x-icon             ico;
		image/svg+xml            svg svgz;
		image/webp               webp;
		application/pdf          pdf;
	}
	include /etc/nginx/conf-templates/enable-php.conf;
	location = / {
		add_header               X-XRDS-Location http://www.myopenid.com/xrds?username=EtiennePerot.myopenid.com;
	}
	location /img {
		if ($arg_expires_max) {
			expires          max;
			add_header       Last-Modified "";
			add_header       ETag "";
		}
		add_header               Cache-Control public;
	}
	location /posts {
		if ($arg_expires_max) {
			expires          max;
			add_header       Last-Modified "";
			add_header       ETag "";
		}
		add_header               Cache-Control public;
	}
	location /private {
		auth_basic               "Private files";
		auth_basic_user_file     /home/perot/private-auth.txt;
	}
	location ~ /(?:posts-)?img/.*-res- {
		rewrite                  "/img/(.*)-res-.{8}(.*)" /img/$1$2?expires_max=1;
		rewrite                  "/posts-img/(.*)-res-.{8}(.*)" /posts/$1$2?expires_max=1;
	}
	location /posts-img/ {
		rewrite                  "/posts-img/(.*)" /posts/$1;
	}
	location /blog/comment/queue {
		return 403;
	}
	location /blog/comment/nonces {
		return 403;
	}
	location /reply: {
		rewrite                  /reply:(.+) /posts/$1/$1_reply.php?nocache=1;
	}
	location /getnonce {
		rewrite                  ^.*$ /blog/comments/getnonce.php?nocache=1;
	}
	location /comment {
		rewrite                  ^.*$ /blog/comments/submit.php?nocache=1;
	}
	location /mozilla-sync {
		rewrite                  ^/mozilla-sync(/?)(.*) /$2 break;
		proxy_pass               http://localhost:11114;
	}
	location /radicale {
		auth_basic               "Radicale";
		auth_basic_user_file     /etc/radicale/users;
		rewrite                  ^/radicale(/?)(.*) /$2 break;
		proxy_pass               http://localhost:5232;
	}
	location /tt-rss {
		root /home/ttrss;
		auth_basic               "Tiny Tiny RSS";
		auth_basic_user_file     /home/ttrss/auth.txt;
		include                  /etc/nginx/conf-templates/enable-php.conf;
	}
	location = /tt-rss/public.php {
		root                     /home/ttrss;
		include                  /etc/nginx/conf-templates/enable-php-direct.conf;
	}
	location /piwik {
		root                     /usr/share/webapps;
		auth_basic               "Piwik Analytics";
		auth_basic_user_file     /usr/share/webapps/piwik/auth.txt;
		include                  /etc/nginx/conf-templates/enable-php.conf;
	}
	rewrite                          "^/([^/]+)\.md$" /posts/$1/$1.md;
	try_files                        /posts$uri/$uri.html /posts$uri/$uri /posts$uri $uri.html $uri.md $uri/ $uri =404;
}
server { # Redirect to HTTPS version, and set STS header
	listen                           80;
	listen                           [::]:80;
	server_name                      perot.me *.perot.me;
	expires                          max;
	add_header                       Cache-Control public;
	add_header                       Strict-Transport-Security "max-age=31557600, includeSubDomains";
	rewrite                          ^ https://$server_name$request_uri? permanent;
}
server { # Domain aliases
	listen                           80;
	listen                           [::]:80;
	server_name                      etienneperot.com *.etienneperot.com etienneperot.name *.etienneperot.name;
	expires                          max;
	add_header                       Cache-Control public;
	rewrite                          ^ https://perot.me$request_uri? permanent;
}
server { # Local-only piwik-serving server without HTTP auth, so that the log importer script can use it
	listen                           127.0.0.1:51814;
	location /piwik {
		root                     /usr/share/webapps;
		include                  /etc/nginx/conf-templates/enable-php.conf;
	}
}
